#!/usr/bin/env python
import sys
import argparse
from rez import __version__



def _add_common_args(subp):
    subp.add_argument("--debug", dest="debug", action="store_true",
                      help=argparse.SUPPRESS)
    #subp.add_argument("--no-del-tmpdir", dest="no_del_tmpdir", action="store_true",
    #                  help=argparse.SUPPRESS)


def _subcmd_name(cli_name):
    if cli_name in ("exec",):
        return cli_name+'_'
    else:
        return cli_name.replace('-','_')


class NeverException(Exception):
    pass


if __name__ == '__main__':
    p = argparse.ArgumentParser(
        description='Rez command-line tool',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    subps = p.add_subparsers(dest="cmd")
    subparsers = {}

    def _add_subcommand(cmd, help):
        subp = subps.add_parser(cmd, help=help)
        _add_common_args(subp)
        # TODO is this slowing down rez startup time? Try moving all parser setup into this file
        # TODO to avoid importing all the cli sourcefiles.
        exec("from rez.cli.%s import setup_parser" % _subcmd_name(cmd))
        setup_parser(subp)
        subparsers[cmd] = subp

    _add_subcommand("settings",
                    "Print current rez settings.")
    _add_subcommand("context",
                    "Print information about the current rez context, or a "
                    "given context file.")
    _add_subcommand("env",
                    "Open a rez-configured shell, possibly interactive.")
    _add_subcommand("exec",
                    "Execute some Rex code and print the interpreted result")

    p.add_argument("-V", "--version", action="version",
                   version="Rez %s" % __version__)

    opts = p.parse_args()
    cmd = opts.cmd
    exec("from rez.cli.%s import command" % _subcmd_name(cmd))

    exc_type = NeverException if opts.debug else Exception
    try:
        returncode = command(opts, subparsers[cmd])
    except exc_type as e:
        print >> sys.stderr, str(e)
        sys.exit(1)

    #if not opts.no_del_tmpdir:
    #    from rez.util import clean_tmpdir
    #    clean_tmpdir()

    sys.exit(returncode or 0)
